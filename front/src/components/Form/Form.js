import React, { useRef, useState } from 'react';
import EmailEditor from 'react-email-editor';
import {
  FormColumn,
  FormWrapper,
  FormInput,
  FormSection,
  FormRow,
  FormLabel,
  FormInputRow,
  FormMessage,
  FormButton,
  FormTitle,
} from './FormStyles';
import { Container } from '../../globalStyles';
import validateForm from './validateForm';
import axios from 'axios';

const Form = () => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [html, setHtml] = useState('');

  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(null);

  const editorRef = useRef(null);

  const handleSubmit = async (e) => {
	e.preventDefault();
	const resultError = validateForm({ name, email });

	if (resultError !== null) {
	  setError(resultError);
	  return;
	}

	try {
	  // Send the email with the HTML generated by Unlayer
	  const { data } = await axios.post('http://localhost:8000/email/sendEmail', {
		name,
		email,
		html // Pass the HTML generated by Unlayer
	  });
	  console.log(data);
	  setSuccess('Дякуємо, вам надійде лист на вашу електронну пошту!');
	} catch (err) {
	  console.error(err);
	  setError('Не вдалось надіслати повідомлення');
	}

	setName('');
	setEmail('');

    setHtml('');
  };

  const onExportHtml = (data) => {
	if (data && data.html) {
	  setHtml(data.html);
	}
  };

  const messageVariants = {
    hidden: { y: 30, opacity: 0 },
    animate: { y: 0, opacity: 1, transition: { delay: 0.2, duration: 0.4 } },
  };

  const formData = [
    { label: 'Name', value: name, onChange: (e) => setName(e.target.value), type: 'text' },
	  { label: 'Email', value: email, onChange: (e) => setEmail(e.target.value), type: 'email' },
	];

	const onEditorLoad = () => {
		// Set initial HTML in EmailEditor when it is loaded
		const editor = window.emailEditorRef;
		if (editor) {
		  editor.loadDesign({ body: { html } });
		}
	  };


	const onDesignLoad = (data) => {
		// Save HTML from EmailEditor when it is changed
		editorRef.current.exportHtml(data => {
			setHtml(data.html);
		});
	};

  return (
    <FormSection>
      <Container>
        <FormRow>
          <FormColumn small>
            <FormTitle>Зворотній зв'язок</FormTitle>
            <FormWrapper onSubmit={handleSubmit}>

			<EmailEditor
  projectId={156020}
  publicKey={'iOmj9ruBgGTfSOOBJS77ije1W5jzqaO2B0L8FhuDg9WKrT6tGegaImbuMQUcpYKc'}
  onLoad={onDesignLoad}
  onReady={onEditorLoad}
  onExportHtml={onExportHtml}
  ref={editorRef}
/>

					  {formData.map((el, index) => (
						<FormInputRow key={index}>
						  <FormLabel>{el.label}</FormLabel>
						  <FormInput
							type={el.type}
							placeholder={`Enter your ${el.label.toLocaleLowerCase()}`}
							value={el.value}
							onChange={el.onChange}
						  />
						</FormInputRow>
					  ))}

					  <FormButton type="submit">Відправити</FormButton>
					</FormWrapper>
					{error && (
					  <FormMessage
						variants={messageVariants}
						initial="hidden"
						animate="animate"

							>
								{success}
							</FormMessage>
						)}
					</FormColumn>
				</FormRow>
			</Container>
		</FormSection>
	);
};

export default Form;
